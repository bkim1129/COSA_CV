% Auto-generated by stereoCalibrator app on 05-May-2021
%-------------------------------------------------------

% Define images to process
imageFileNames1 = imgName1;
imageFileNames2 = imgName2;
% Detect checkerboards in images
[imagePoints, boardSize, imagesUsed] = detectCheckerboardPoints(imageFileNames1, imageFileNames2);

% Generate world coordinates of the checkerboard keypoints
squareSize = 23;  % in units of 'millimeters'
worldPoints = generateCheckerboardPoints(boardSize, squareSize);

% Read one of the images from the first stereo pair
I1 = imread(imageFileNames1{1});
[mrows, ncols, ~] = size(I1);

% Calibrate the camera
[stereoParams, pairsUsed, estimationErrors] = estimateCameraParameters(imagePoints, worldPoints, ...
    'EstimateSkew', false, 'EstimateTangentialDistortion', false, ...
    'NumRadialDistortionCoefficients', 2, 'WorldUnits', 'millimeters', ...
    'InitialIntrinsicMatrix', [], 'InitialRadialDistortion', [], ...
    'ImageSize', [mrows, ncols]);

stereoParams.MeanReprojectionError
    

% View reprojection errors


h1=figure; 

showReprojectionErrors(stereoParams);
ax = gca;
h = findobj(gca,'Type','bar');

idx=find(imagesUsed==1);

cam1_outlier=find(h(3).YData>0.7);
cam2_outlier=find(h(4).YData>0.7);

if ~isempty(cam1_outlier) && ~isempty(cam2_outlier)
    out1=idx(cam1_outlier);
    out2=idx(cam2_outlier);
    out3=[out1; out2];
    out3=unique(out3);
elseif ~isempty(cam1_outlier) && isempty(cam2_outlier)
    out3=idx(cam1_outlier);
elseif isempty(cam1_outlier) && ~isempty(cam2_outlier)
    out3=idx(cam2_outlier); 
else
    out3=[];
end

idx_none=find(imagesUsed==0);
out3 = [out3; idx_none];

imageFileNames1(out3)=[];
imageFileNames2(out3)=[];


[imagePoints, boardSize, imagesUsed] = detectCheckerboardPoints(imageFileNames1, imageFileNames2);

% Generate world coordinates of the checkerboard keypoints
squareSize = 23;  % in units of 'millimeters'
worldPoints = generateCheckerboardPoints(boardSize, squareSize);

% Read one of the images from the first stereo pair
I1 = imread(imageFileNames1{1});
[mrows, ncols, ~] = size(I1);

% Calibrate the camera
[stereoParams, pairsUsed, estimationErrors] = estimateCameraParameters(imagePoints, worldPoints, ...
    'EstimateSkew', false, 'EstimateTangentialDistortion', false, ...
    'NumRadialDistortionCoefficients', 2, 'WorldUnits', 'millimeters', ...
    'InitialIntrinsicMatrix', [], 'InitialRadialDistortion', [], ...
    'ImageSize', [mrows, ncols]);

stereoParams.MeanReprojectionError

h1=figure; 

showReprojectionErrors(stereoParams);

% Visualize pattern locations
h2=figure; showExtrinsics(stereoParams, 'CameraCentric');

% Display parameter estimation errors
displayErrors(estimationErrors, stereoParams);

% You can use the calibration data to rectify stereo images.
I2 = imread(imageFileNames2{1});
[J1, J2] = rectifyStereoImages(I1, I2, stereoParams);

% See additional examples of how to use the calibration data.  At the prompt type:
% showdemo('StereoCalibrationAndSceneReconstructionExample')
% showdemo('DepthEstimationFromStereoVideoExample')
